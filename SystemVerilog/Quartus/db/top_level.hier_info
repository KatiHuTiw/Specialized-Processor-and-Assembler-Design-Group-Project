|top_level
clk => clk.IN4
reset => reset.IN2
done <= Control:ctrl1.done


|top_level|PC:pc1
reset => prog_ctr.OUTPUTSELECT
reset => prog_ctr.OUTPUTSELECT
reset => prog_ctr.OUTPUTSELECT
reset => prog_ctr.OUTPUTSELECT
reset => prog_ctr.OUTPUTSELECT
reset => prog_ctr.OUTPUTSELECT
reset => prog_ctr.OUTPUTSELECT
reset => prog_ctr.OUTPUTSELECT
reset => prog_ctr.OUTPUTSELECT
reset => prog_ctr.OUTPUTSELECT
reset => prog_ctr.OUTPUTSELECT
reset => prog_ctr.OUTPUTSELECT
clk => prog_ctr[0]~reg0.CLK
clk => prog_ctr[1]~reg0.CLK
clk => prog_ctr[2]~reg0.CLK
clk => prog_ctr[3]~reg0.CLK
clk => prog_ctr[4]~reg0.CLK
clk => prog_ctr[5]~reg0.CLK
clk => prog_ctr[6]~reg0.CLK
clk => prog_ctr[7]~reg0.CLK
clk => prog_ctr[8]~reg0.CLK
clk => prog_ctr[9]~reg0.CLK
clk => prog_ctr[10]~reg0.CLK
clk => prog_ctr[11]~reg0.CLK
stall => prog_ctr.OUTPUTSELECT
stall => prog_ctr.OUTPUTSELECT
stall => prog_ctr.OUTPUTSELECT
stall => prog_ctr.OUTPUTSELECT
stall => prog_ctr.OUTPUTSELECT
stall => prog_ctr.OUTPUTSELECT
stall => prog_ctr.OUTPUTSELECT
stall => prog_ctr.OUTPUTSELECT
stall => prog_ctr.OUTPUTSELECT
stall => prog_ctr.OUTPUTSELECT
stall => prog_ctr.OUTPUTSELECT
stall => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
jump_en => prog_ctr.OUTPUTSELECT
target[0] => Add0.IN24
target[1] => Add0.IN23
target[2] => Add0.IN22
target[3] => Add0.IN21
target[4] => Add0.IN20
target[5] => Add0.IN19
target[6] => Add0.IN18
target[7] => Add0.IN17
target[8] => Add0.IN16
target[9] => Add0.IN15
target[10] => Add0.IN14
target[11] => Add0.IN13
prog_ctr[0] <= prog_ctr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prog_ctr[1] <= prog_ctr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prog_ctr[2] <= prog_ctr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prog_ctr[3] <= prog_ctr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prog_ctr[4] <= prog_ctr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prog_ctr[5] <= prog_ctr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prog_ctr[6] <= prog_ctr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prog_ctr[7] <= prog_ctr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prog_ctr[8] <= prog_ctr[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prog_ctr[9] <= prog_ctr[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prog_ctr[10] <= prog_ctr[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prog_ctr[11] <= prog_ctr[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|PC_Controller:pc1_ctrl
immOrLUT => offset.OUTPUTSELECT
immOrLUT => offset.OUTPUTSELECT
immOrLUT => offset.OUTPUTSELECT
immOrLUT => offset.OUTPUTSELECT
immOrLUT => offset.OUTPUTSELECT
immOrLUT => offset.OUTPUTSELECT
immOrLUT => offset.OUTPUTSELECT
immOrLUT => offset.OUTPUTSELECT
immOrLUT => offset.OUTPUTSELECT
immOrLUT => offset.OUTPUTSELECT
immOrLUT => offset.OUTPUTSELECT
immOrLUT => offset.OUTPUTSELECT
pc_ctrl_input[0] => Decoder0.IN3
pc_ctrl_input[0] => Decoder1.IN2
pc_ctrl_input[0] => offset.DATAA
pc_ctrl_input[1] => Decoder0.IN2
pc_ctrl_input[1] => offset.DATAA
pc_ctrl_input[2] => Decoder0.IN1
pc_ctrl_input[2] => Decoder1.IN1
pc_ctrl_input[2] => offset.DATAA
pc_ctrl_input[3] => Decoder0.IN0
pc_ctrl_input[3] => Decoder1.IN0
pc_ctrl_input[3] => offset.DATAA
pc_ctrl_input[3] => offset.DATAA
pc_ctrl_input[3] => offset.DATAA
pc_ctrl_input[3] => offset.DATAA
pc_ctrl_input[3] => offset.DATAA
pc_ctrl_input[3] => offset.DATAA
pc_ctrl_input[3] => offset.DATAA
pc_ctrl_input[3] => offset.DATAA
pc_ctrl_input[3] => offset.DATAA
target[0] <= offset.DB_MAX_OUTPUT_PORT_TYPE
target[1] <= offset.DB_MAX_OUTPUT_PORT_TYPE
target[2] <= offset.DB_MAX_OUTPUT_PORT_TYPE
target[3] <= offset.DB_MAX_OUTPUT_PORT_TYPE
target[4] <= offset.DB_MAX_OUTPUT_PORT_TYPE
target[5] <= offset.DB_MAX_OUTPUT_PORT_TYPE
target[6] <= offset.DB_MAX_OUTPUT_PORT_TYPE
target[7] <= offset.DB_MAX_OUTPUT_PORT_TYPE
target[8] <= offset.DB_MAX_OUTPUT_PORT_TYPE
target[9] <= offset.DB_MAX_OUTPUT_PORT_TYPE
target[10] <= offset.DB_MAX_OUTPUT_PORT_TYPE
target[11] <= offset.DB_MAX_OUTPUT_PORT_TYPE


|top_level|instr_ROM:instructions
prog_ctr[0] => core.RADDR
prog_ctr[1] => core.RADDR1
prog_ctr[2] => core.RADDR2
prog_ctr[3] => core.RADDR3
prog_ctr[4] => core.RADDR4
prog_ctr[5] => core.RADDR5
prog_ctr[6] => core.RADDR6
prog_ctr[7] => core.RADDR7
prog_ctr[8] => core.RADDR8
prog_ctr[9] => core.RADDR9
prog_ctr[10] => core.RADDR10
prog_ctr[11] => core.RADDR11
mach_code[0] <= core.DATAOUT
mach_code[1] <= core.DATAOUT1
mach_code[2] <= core.DATAOUT2
mach_code[3] <= core.DATAOUT3
mach_code[4] <= core.DATAOUT4
mach_code[5] <= core.DATAOUT5
mach_code[6] <= core.DATAOUT6
mach_code[7] <= core.DATAOUT7
mach_code[8] <= core.DATAOUT8


|top_level|decoderModule:dec1
binaryCode[0] => operand2[0].DATAIN
binaryCode[1] => operand2[1].DATAIN
binaryCode[2] => operand1[0].DATAIN
binaryCode[3] => operand1[1].DATAIN
binaryCode[4] => opcode[0].DATAIN
binaryCode[5] => opcode[1].DATAIN
binaryCode[6] => opcode[2].DATAIN
binaryCode[7] => opcode[3].DATAIN
binaryCode[8] => opcode[4].DATAIN
opcode[0] <= binaryCode[4].DB_MAX_OUTPUT_PORT_TYPE
opcode[1] <= binaryCode[5].DB_MAX_OUTPUT_PORT_TYPE
opcode[2] <= binaryCode[6].DB_MAX_OUTPUT_PORT_TYPE
opcode[3] <= binaryCode[7].DB_MAX_OUTPUT_PORT_TYPE
opcode[4] <= binaryCode[8].DB_MAX_OUTPUT_PORT_TYPE
operand1[0] <= binaryCode[2].DB_MAX_OUTPUT_PORT_TYPE
operand1[1] <= binaryCode[3].DB_MAX_OUTPUT_PORT_TYPE
operand2[0] <= binaryCode[0].DB_MAX_OUTPUT_PORT_TYPE
operand2[1] <= binaryCode[1].DB_MAX_OUTPUT_PORT_TYPE


|top_level|immediate_ctrl:immediate_ctrl1
numBits => immediateValue.OUTPUTSELECT
numBits => immediateValue.OUTPUTSELECT
immediateInput0[0] => immediateValue.DATAB
immediateInput0[1] => immediateValue.DATAB
immediateInput1[0] => immediateValue[0].DATAIN
immediateInput1[1] => immediateValue[1].DATAIN
immediateValue[0] <= immediateInput1[0].DB_MAX_OUTPUT_PORT_TYPE
immediateValue[1] <= immediateInput1[1].DB_MAX_OUTPUT_PORT_TYPE
immediateValue[2] <= immediateValue.DB_MAX_OUTPUT_PORT_TYPE
immediateValue[3] <= immediateValue.DB_MAX_OUTPUT_PORT_TYPE
immediateValue[4] <= <GND>
immediateValue[5] <= <GND>
immediateValue[6] <= <GND>
immediateValue[7] <= <GND>


|top_level|reg_file:rf1
dat_in[0] => core.data_a[0].DATAIN
dat_in[0] => core.DATAIN
dat_in[1] => core.data_a[1].DATAIN
dat_in[1] => core.DATAIN1
dat_in[2] => core.data_a[2].DATAIN
dat_in[2] => core.DATAIN2
dat_in[3] => core.data_a[3].DATAIN
dat_in[3] => core.DATAIN3
dat_in[4] => core.data_a[4].DATAIN
dat_in[4] => core.DATAIN4
dat_in[5] => core.data_a[5].DATAIN
dat_in[5] => core.DATAIN5
dat_in[6] => core.data_a[6].DATAIN
dat_in[6] => core.DATAIN6
dat_in[7] => core.data_a[7].DATAIN
dat_in[7] => core.DATAIN7
clk => core.we_a.CLK
clk => core.waddr_a[1].CLK
clk => core.waddr_a[0].CLK
clk => core.data_a[7].CLK
clk => core.data_a[6].CLK
clk => core.data_a[5].CLK
clk => core.data_a[4].CLK
clk => core.data_a[3].CLK
clk => core.data_a[2].CLK
clk => core.data_a[1].CLK
clk => core.data_a[0].CLK
clk => core.CLK0
wr_en => core.we_a.DATAIN
wr_en => core.WE
wr_addr[0] => core.waddr_a[0].DATAIN
wr_addr[0] => core.WADDR
wr_addr[1] => core.waddr_a[1].DATAIN
wr_addr[1] => core.WADDR1
rd_addrA[0] => core.RADDR
rd_addrA[1] => core.RADDR1
rd_addrB[0] => core.PORTBRADDR
rd_addrB[1] => core.PORTBRADDR1
datA_out[0] <= core.DATAOUT
datA_out[1] <= core.DATAOUT1
datA_out[2] <= core.DATAOUT2
datA_out[3] <= core.DATAOUT3
datA_out[4] <= core.DATAOUT4
datA_out[5] <= core.DATAOUT5
datA_out[6] <= core.DATAOUT6
datA_out[7] <= core.DATAOUT7
datB_out[0] <= core.PORTBDATAOUT
datB_out[1] <= core.PORTBDATAOUT1
datB_out[2] <= core.PORTBDATAOUT2
datB_out[3] <= core.PORTBDATAOUT3
datB_out[4] <= core.PORTBDATAOUT4
datB_out[5] <= core.PORTBDATAOUT5
datB_out[6] <= core.PORTBDATAOUT6
datB_out[7] <= core.PORTBDATAOUT7


|top_level|mux_2x1:reg_dat_mux
in1[0] => out.DATAB
in1[1] => out.DATAB
in1[2] => out.DATAB
in1[3] => out.DATAB
in1[4] => out.DATAB
in1[5] => out.DATAB
in1[6] => out.DATAB
in1[7] => out.DATAB
in2[0] => out.DATAA
in2[1] => out.DATAA
in2[2] => out.DATAA
in2[3] => out.DATAA
in2[4] => out.DATAA
in2[5] => out.DATAA
in2[6] => out.DATAA
in2[7] => out.DATAA
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE


|top_level|mux_2x1:op1_branch_mux
in1[0] => out.DATAB
in1[1] => out.DATAB
in2[0] => out.DATAA
in2[1] => out.DATAA
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE


|top_level|mux_2x1:op2_branch_mux
in1[0] => out.DATAB
in1[1] => out.DATAB
in2[0] => out.DATAA
in2[1] => out.DATAA
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE


|top_level|mux_2x1:op2_address_mux
in1[0] => out.DATAB
in1[1] => out.DATAB
in2[0] => out.DATAA
in2[1] => out.DATAA
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE


|top_level|Register_Mapper:reg_mapper
reg1[0] => Decoder0.IN1
reg1[0] => Mux0.IN1
reg1[0] => Mux1.IN1
reg1[1] => Decoder0.IN0
reg1[1] => Mux0.IN0
reg1[1] => Mux1.IN0
reg2[0] => Decoder1.IN1
reg2[0] => Mux2.IN1
reg2[0] => Mux3.IN1
reg2[1] => Decoder1.IN0
reg2[1] => Mux2.IN0
reg2[1] => Mux3.IN0
reg_write[0] => Mux4.IN1
reg_write[0] => Mux5.IN1
reg_write[1] => Mux4.IN0
reg_write[1] => Mux5.IN0
clk => register_mappings_reg[3][0].CLK
clk => register_mappings_reg[3][1].CLK
clk => register_mappings_reg[2][0].CLK
clk => register_mappings_reg[2][1].CLK
clk => register_mappings_reg[1][0].CLK
clk => register_mappings_reg[1][1].CLK
clk => register_mappings_reg[0][0].CLK
clk => register_mappings_reg[0][1].CLK
reset => register_mappings_reg.OUTPUTSELECT
reset => register_mappings_reg.OUTPUTSELECT
reset => register_mappings_reg.OUTPUTSELECT
reset => register_mappings_reg.OUTPUTSELECT
reset => register_mappings_reg.OUTPUTSELECT
reset => register_mappings_reg.OUTPUTSELECT
reset => register_mappings_reg.OUTPUTSELECT
reset => register_mappings_reg.OUTPUTSELECT
doSWAP => register_mappings_next[0][1].OUTPUTSELECT
doSWAP => register_mappings_next[0][0].OUTPUTSELECT
doSWAP => register_mappings_next[1][1].OUTPUTSELECT
doSWAP => register_mappings_next[1][0].OUTPUTSELECT
doSWAP => register_mappings_next[2][1].OUTPUTSELECT
doSWAP => register_mappings_next[2][0].OUTPUTSELECT
doSWAP => register_mappings_next[3][1].OUTPUTSELECT
doSWAP => register_mappings_next[3][0].OUTPUTSELECT
reg1_mapped[0] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
reg1_mapped[1] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
reg2_mapped[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
reg2_mapped[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
reg0_mapped[0] <= register_mappings_reg[0][0].DB_MAX_OUTPUT_PORT_TYPE
reg0_mapped[1] <= register_mappings_reg[0][1].DB_MAX_OUTPUT_PORT_TYPE
reg_write_mapped[0] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
reg_write_mapped[1] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE


|top_level|mux_2x1:reg_wr_mux
in1[0] => out.DATAB
in1[1] => out.DATAB
in2[0] => out.DATAA
in2[1] => out.DATAA
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE


|top_level|mux_2x1:xor_operand_select_mux
in1[0] => out.DATAB
in1[1] => out.DATAB
in2[0] => out.DATAA
in2[1] => out.DATAA
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE


|top_level|alu:alu1
alu_cmd[0] => Mux0.IN33
alu_cmd[0] => Mux1.IN33
alu_cmd[0] => Mux2.IN33
alu_cmd[0] => Mux3.IN33
alu_cmd[0] => Mux4.IN33
alu_cmd[0] => Mux5.IN33
alu_cmd[0] => Mux6.IN33
alu_cmd[0] => Mux7.IN34
alu_cmd[0] => Decoder1.IN4
alu_cmd[1] => Mux0.IN32
alu_cmd[1] => Mux1.IN32
alu_cmd[1] => Mux2.IN32
alu_cmd[1] => Mux3.IN32
alu_cmd[1] => Mux4.IN32
alu_cmd[1] => Mux5.IN32
alu_cmd[1] => Mux6.IN32
alu_cmd[1] => Mux7.IN33
alu_cmd[1] => Decoder1.IN3
alu_cmd[2] => Mux0.IN31
alu_cmd[2] => Mux1.IN31
alu_cmd[2] => Mux2.IN31
alu_cmd[2] => Mux3.IN31
alu_cmd[2] => Mux4.IN31
alu_cmd[2] => Mux5.IN31
alu_cmd[2] => Mux6.IN31
alu_cmd[2] => Mux7.IN32
alu_cmd[2] => Decoder1.IN2
alu_cmd[3] => Mux0.IN30
alu_cmd[3] => Mux1.IN30
alu_cmd[3] => Mux2.IN30
alu_cmd[3] => Mux3.IN30
alu_cmd[3] => Mux4.IN30
alu_cmd[3] => Mux5.IN30
alu_cmd[3] => Mux6.IN30
alu_cmd[3] => Mux7.IN31
alu_cmd[3] => Decoder1.IN1
alu_cmd[4] => Mux0.IN29
alu_cmd[4] => Mux1.IN29
alu_cmd[4] => Mux2.IN29
alu_cmd[4] => Mux3.IN29
alu_cmd[4] => Mux4.IN29
alu_cmd[4] => Mux5.IN29
alu_cmd[4] => Mux6.IN29
alu_cmd[4] => Mux7.IN30
alu_cmd[4] => Decoder1.IN0
inA[0] => Add0.IN8
inA[0] => Add2.IN16
inA[0] => ShiftLeft0.IN8
inA[0] => ShiftLeft1.IN17
inA[0] => ShiftRight0.IN8
inA[0] => ShiftRight1.IN17
inA[0] => rslt.IN0
inA[0] => rslt.IN0
inA[0] => Selector3.IN9
inA[0] => Selector4.IN9
inA[0] => Selector5.IN9
inA[0] => Selector6.IN9
inA[0] => rslt.IN0
inA[0] => WideXor0.IN0
inA[0] => rslt.DATAB
inA[0] => Equal0.IN7
inA[0] => LessThan0.IN8
inA[1] => Add0.IN7
inA[1] => Add2.IN15
inA[1] => ShiftLeft0.IN7
inA[1] => ShiftLeft1.IN16
inA[1] => ShiftRight0.IN7
inA[1] => ShiftRight1.IN16
inA[1] => rslt.IN0
inA[1] => rslt.IN0
inA[1] => Selector2.IN9
inA[1] => Selector3.IN8
inA[1] => Selector4.IN8
inA[1] => Selector5.IN8
inA[1] => rslt.IN0
inA[1] => WideXor0.IN1
inA[1] => rslt.DATAB
inA[1] => Equal0.IN6
inA[1] => LessThan0.IN7
inA[2] => Add0.IN6
inA[2] => Add2.IN14
inA[2] => ShiftLeft0.IN6
inA[2] => ShiftLeft1.IN15
inA[2] => ShiftRight0.IN6
inA[2] => ShiftRight1.IN15
inA[2] => rslt.IN0
inA[2] => rslt.IN0
inA[2] => Selector1.IN9
inA[2] => Selector2.IN8
inA[2] => Selector3.IN7
inA[2] => Selector4.IN7
inA[2] => rslt.IN0
inA[2] => WideXor0.IN2
inA[2] => rslt.DATAB
inA[2] => Equal0.IN5
inA[2] => LessThan0.IN6
inA[3] => Add0.IN5
inA[3] => Add2.IN13
inA[3] => ShiftLeft0.IN5
inA[3] => ShiftLeft1.IN14
inA[3] => ShiftRight0.IN5
inA[3] => ShiftRight1.IN14
inA[3] => rslt.IN0
inA[3] => rslt.IN0
inA[3] => Selector0.IN9
inA[3] => Selector1.IN8
inA[3] => Selector2.IN7
inA[3] => Selector3.IN6
inA[3] => rslt.IN0
inA[3] => WideXor0.IN3
inA[3] => rslt.DATAB
inA[3] => Equal0.IN4
inA[3] => LessThan0.IN5
inA[4] => Add0.IN4
inA[4] => Add2.IN12
inA[4] => ShiftLeft0.IN4
inA[4] => ShiftLeft1.IN13
inA[4] => ShiftRight0.IN4
inA[4] => ShiftRight1.IN13
inA[4] => rslt.IN0
inA[4] => rslt.IN0
inA[4] => Selector0.IN8
inA[4] => Selector1.IN7
inA[4] => Selector2.IN6
inA[4] => Selector7.IN9
inA[4] => rslt.IN0
inA[4] => WideXor0.IN4
inA[4] => Equal0.IN3
inA[4] => LessThan0.IN4
inA[5] => Add0.IN3
inA[5] => Add2.IN11
inA[5] => ShiftLeft0.IN3
inA[5] => ShiftLeft1.IN12
inA[5] => ShiftRight0.IN3
inA[5] => ShiftRight1.IN12
inA[5] => rslt.IN0
inA[5] => rslt.IN0
inA[5] => Selector0.IN7
inA[5] => Selector1.IN6
inA[5] => Selector6.IN8
inA[5] => Selector7.IN8
inA[5] => rslt.IN0
inA[5] => WideXor0.IN5
inA[5] => rslt.DATAA
inA[5] => Equal0.IN2
inA[5] => LessThan0.IN3
inA[6] => Add0.IN2
inA[6] => Add2.IN10
inA[6] => ShiftLeft0.IN2
inA[6] => ShiftLeft1.IN11
inA[6] => ShiftRight0.IN2
inA[6] => ShiftRight1.IN11
inA[6] => rslt.IN0
inA[6] => rslt.IN0
inA[6] => Selector0.IN6
inA[6] => Selector5.IN7
inA[6] => Selector6.IN7
inA[6] => Selector7.IN7
inA[6] => rslt.IN0
inA[6] => WideXor0.IN6
inA[6] => rslt.DATAA
inA[6] => Equal0.IN1
inA[6] => LessThan0.IN2
inA[7] => Add0.IN1
inA[7] => Add2.IN9
inA[7] => ShiftLeft0.IN1
inA[7] => ShiftLeft1.IN10
inA[7] => ShiftRight0.IN1
inA[7] => ShiftRight1.IN10
inA[7] => rslt.IN0
inA[7] => rslt.IN0
inA[7] => Selector4.IN6
inA[7] => Selector5.IN6
inA[7] => Selector6.IN6
inA[7] => Selector7.IN6
inA[7] => rslt.IN0
inA[7] => WideXor0.IN7
inA[7] => rslt.DATAA
inA[7] => Equal0.IN0
inA[7] => LessThan0.IN1
inB[0] => Add0.IN16
inB[0] => ShiftLeft0.IN16
inB[0] => ShiftRight0.IN16
inB[0] => Add3.IN16
inB[0] => rslt.IN1
inB[0] => rslt.IN1
inB[0] => Decoder0.IN7
inB[0] => rslt.IN1
inB[0] => rslt.IN1
inB[0] => Equal0.IN15
inB[0] => LessThan0.IN16
inB[0] => Mux7.IN35
inB[0] => Mux7.IN36
inB[0] => Add2.IN8
inB[0] => Mux7.IN13
inB[1] => Add0.IN15
inB[1] => ShiftLeft0.IN15
inB[1] => ShiftRight0.IN15
inB[1] => Add3.IN15
inB[1] => rslt.IN1
inB[1] => rslt.IN1
inB[1] => Decoder0.IN6
inB[1] => rslt.IN1
inB[1] => Equal0.IN14
inB[1] => LessThan0.IN15
inB[1] => Mux6.IN34
inB[1] => Mux6.IN35
inB[1] => Mux6.IN36
inB[1] => Add2.IN7
inB[1] => Mux6.IN15
inB[2] => Add0.IN14
inB[2] => ShiftLeft0.IN14
inB[2] => ShiftRight0.IN14
inB[2] => Add3.IN14
inB[2] => rslt.IN1
inB[2] => rslt.IN1
inB[2] => Decoder0.IN5
inB[2] => rslt.IN1
inB[2] => Equal0.IN13
inB[2] => LessThan0.IN14
inB[2] => Mux5.IN34
inB[2] => Mux5.IN35
inB[2] => Mux5.IN36
inB[2] => Add2.IN6
inB[2] => Mux5.IN15
inB[3] => Add0.IN13
inB[3] => ShiftLeft0.IN13
inB[3] => ShiftRight0.IN13
inB[3] => Add3.IN13
inB[3] => rslt.IN1
inB[3] => rslt.IN1
inB[3] => Decoder0.IN4
inB[3] => rslt.IN1
inB[3] => Equal0.IN12
inB[3] => LessThan0.IN13
inB[3] => Mux4.IN34
inB[3] => Mux4.IN35
inB[3] => Mux4.IN36
inB[3] => Add2.IN5
inB[3] => Mux4.IN15
inB[4] => Add0.IN12
inB[4] => ShiftLeft0.IN12
inB[4] => ShiftRight0.IN12
inB[4] => Add3.IN12
inB[4] => rslt.IN1
inB[4] => rslt.IN1
inB[4] => Decoder0.IN3
inB[4] => rslt.IN1
inB[4] => Equal0.IN11
inB[4] => LessThan0.IN12
inB[4] => Mux3.IN34
inB[4] => Mux3.IN35
inB[4] => Mux3.IN36
inB[4] => Add2.IN4
inB[4] => Mux3.IN16
inB[5] => Add0.IN11
inB[5] => ShiftLeft0.IN11
inB[5] => ShiftRight0.IN11
inB[5] => Add3.IN11
inB[5] => rslt.IN1
inB[5] => rslt.IN1
inB[5] => Decoder0.IN2
inB[5] => rslt.IN1
inB[5] => Equal0.IN10
inB[5] => LessThan0.IN11
inB[5] => Mux2.IN34
inB[5] => Mux2.IN35
inB[5] => Mux2.IN36
inB[5] => Add2.IN3
inB[5] => Mux2.IN15
inB[6] => Add0.IN10
inB[6] => ShiftLeft0.IN10
inB[6] => ShiftRight0.IN10
inB[6] => Add3.IN10
inB[6] => rslt.IN1
inB[6] => rslt.IN1
inB[6] => Decoder0.IN1
inB[6] => rslt.IN1
inB[6] => Equal0.IN9
inB[6] => LessThan0.IN10
inB[6] => Mux1.IN34
inB[6] => Mux1.IN35
inB[6] => Mux1.IN36
inB[6] => Add2.IN2
inB[6] => Mux1.IN15
inB[7] => Add0.IN9
inB[7] => ShiftLeft0.IN9
inB[7] => ShiftRight0.IN9
inB[7] => Add3.IN9
inB[7] => rslt.IN1
inB[7] => rslt.IN1
inB[7] => Decoder0.IN0
inB[7] => rslt.IN1
inB[7] => Equal0.IN8
inB[7] => LessThan0.IN9
inB[7] => Mux0.IN34
inB[7] => Mux0.IN35
inB[7] => Mux0.IN36
inB[7] => Add2.IN1
inB[7] => Mux0.IN15
rslt[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
rslt[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
rslt[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
rslt[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
rslt[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
rslt[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
rslt[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
rslt[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
doBranch <= Selector8.DB_MAX_OUTPUT_PORT_TYPE


|top_level|mux_2x1:alu_in2_mux
in1[0] => out.DATAB
in1[1] => out.DATAB
in1[2] => out.DATAB
in1[3] => out.DATAB
in1[4] => out.DATAB
in1[5] => out.DATAB
in1[6] => out.DATAB
in1[7] => out.DATAB
in2[0] => out.DATAA
in2[1] => out.DATAA
in2[2] => out.DATAA
in2[3] => out.DATAA
in2[4] => out.DATAA
in2[5] => out.DATAA
in2[6] => out.DATAA
in2[7] => out.DATAA
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
selector => out.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE


|top_level|dat_mem:dm1
dat_in[0] => core.data_a[0].DATAIN
dat_in[0] => core.DATAIN
dat_in[1] => core.data_a[1].DATAIN
dat_in[1] => core.DATAIN1
dat_in[2] => core.data_a[2].DATAIN
dat_in[2] => core.DATAIN2
dat_in[3] => core.data_a[3].DATAIN
dat_in[3] => core.DATAIN3
dat_in[4] => core.data_a[4].DATAIN
dat_in[4] => core.DATAIN4
dat_in[5] => core.data_a[5].DATAIN
dat_in[5] => core.DATAIN5
dat_in[6] => core.data_a[6].DATAIN
dat_in[6] => core.DATAIN6
dat_in[7] => core.data_a[7].DATAIN
dat_in[7] => core.DATAIN7
clk => core.we_a.CLK
clk => core.waddr_a[7].CLK
clk => core.waddr_a[6].CLK
clk => core.waddr_a[5].CLK
clk => core.waddr_a[4].CLK
clk => core.waddr_a[3].CLK
clk => core.waddr_a[2].CLK
clk => core.waddr_a[1].CLK
clk => core.waddr_a[0].CLK
clk => core.data_a[7].CLK
clk => core.data_a[6].CLK
clk => core.data_a[5].CLK
clk => core.data_a[4].CLK
clk => core.data_a[3].CLK
clk => core.data_a[2].CLK
clk => core.data_a[1].CLK
clk => core.data_a[0].CLK
clk => core.CLK0
wr_en => core.we_a.DATAIN
wr_en => core.WE
addr[0] => core.waddr_a[0].DATAIN
addr[0] => core.WADDR
addr[0] => core.RADDR
addr[1] => core.waddr_a[1].DATAIN
addr[1] => core.WADDR1
addr[1] => core.RADDR1
addr[2] => core.waddr_a[2].DATAIN
addr[2] => core.WADDR2
addr[2] => core.RADDR2
addr[3] => core.waddr_a[3].DATAIN
addr[3] => core.WADDR3
addr[3] => core.RADDR3
addr[4] => core.waddr_a[4].DATAIN
addr[4] => core.WADDR4
addr[4] => core.RADDR4
addr[5] => core.waddr_a[5].DATAIN
addr[5] => core.WADDR5
addr[5] => core.RADDR5
addr[6] => core.waddr_a[6].DATAIN
addr[6] => core.WADDR6
addr[6] => core.RADDR6
addr[7] => core.waddr_a[7].DATAIN
addr[7] => core.WADDR7
addr[7] => core.RADDR7
dat_out[0] <= core.DATAOUT
dat_out[1] <= core.DATAOUT1
dat_out[2] <= core.DATAOUT2
dat_out[3] <= core.DATAOUT3
dat_out[4] <= core.DATAOUT4
dat_out[5] <= core.DATAOUT5
dat_out[6] <= core.DATAOUT6
dat_out[7] <= core.DATAOUT7


|top_level|half_byte_parser:hbparser
load_state[0] => Decoder0.IN1
load_state[1] => Decoder0.IN0
in[0] => rslt.DATAA
in[1] => rslt.DATAA
in[2] => rslt.DATAA
in[3] => rslt.DATAA
in[4] => rslt.DATAA
in[5] => rslt.DATAA
in[6] => rslt.DATAA
in[7] => rslt.DATAA
rslt[0] <= rslt.DB_MAX_OUTPUT_PORT_TYPE
rslt[1] <= rslt.DB_MAX_OUTPUT_PORT_TYPE
rslt[2] <= rslt.DB_MAX_OUTPUT_PORT_TYPE
rslt[3] <= rslt.DB_MAX_OUTPUT_PORT_TYPE
rslt[4] <= rslt.DB_MAX_OUTPUT_PORT_TYPE
rslt[5] <= rslt.DB_MAX_OUTPUT_PORT_TYPE
rslt[6] <= rslt.DB_MAX_OUTPUT_PORT_TYPE
rslt[7] <= rslt.DB_MAX_OUTPUT_PORT_TYPE


|top_level|Control:ctrl1
opcode[0] => Decoder0.IN4
opcode[1] => Decoder0.IN3
opcode[2] => Decoder0.IN2
opcode[3] => Decoder0.IN1
opcode[4] => Decoder0.IN0
alu_branch => jump_en.DATAIN
half_byte[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
half_byte[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
jump_en <= alu_branch.DB_MAX_OUTPUT_PORT_TYPE
numBits <= numBits.DB_MAX_OUTPUT_PORT_TYPE
doSWAP <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
RegWrite <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
MemWrite <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
ALU_in2_ctr <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
regfile_dat_ctr <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
regfile_wr_ctr <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
RXOR <= RXOR.DB_MAX_OUTPUT_PORT_TYPE
BEQBranch <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
immOrLUT <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
stall <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
done <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE


